{"version":3,"sources":["CurrentLocation.jsx","App.js","index.js"],"names":["CurrentLocation","useState","latitude","longitude","coordinates","setcoordinates","useEffect","a","navigator","geolocation","getCurrentPosition","position","coords","LocationData","App","Data","setData","lat","long","location","setlocation","console","log","url","fetch","response","json","undefined","resJSON","routes","action","sections","turnByTurnActions","FetchData","ReactDOM","render","document","getElementById"],"mappings":"2KAwBeA,EAtBS,WACtB,MAAsCC,mBAAS,CAC7CC,SAAU,GACVC,UAAW,KAFb,mBAAOC,EAAP,KAAoBC,EAApB,KAkBA,OAbAC,qBAAU,YACU,uCAAG,sBAAAC,EAAA,sEACbC,UAAUC,YAAYC,oBAAmB,SAACC,GAC9CN,EAAe,CACbH,SAAUS,EAASC,OAAOV,SAC1BC,UAAWQ,EAASC,OAAOT,eAJZ,2CAAH,qDAQlBU,KACC,IAGIT,G,OCkBMU,MApCf,WACE,MAAgCd,IAAxBE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,EAAwBF,qBAAxB,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAgCf,mBAAS,CAAEgB,IAAK,GAAIC,KAAM,KAA1D,mBAAOC,EAAP,KAAiBC,EAAjB,KAuBA,OAtBIlB,IAAaiB,EAASF,KAAOd,IAAcgB,EAASD,MACtDE,EAAY,CAAEH,IAAKf,EAAUgB,KAAMf,IAErCkB,QAAQC,IAAIH,GAIZb,qBAAU,YACO,uCAAG,kCAAAC,EAAA,6DACVgB,EADU,wEAC6DJ,EAASF,IADtE,YAC6EE,EAASD,KADtF,wBAJL,WAIK,YAHJ,WAGI,kGAEOM,MAAMD,GAFb,cAEVE,EAFU,gBAGMA,EAASC,OAHf,YAIOC,KADjBC,EAHU,QAIJC,SACJC,EAASF,EAAQC,OAAO,GAAGE,SAAS,GAAGC,kBAC7ChB,EAAQc,IANM,2CAAH,qDAUfG,KACC,CAACd,IAEJE,QAAQC,IAAIP,GAEV,mCACE,gCACGI,EAASF,IADZ,IACkBE,EAASD,WC7BjCgB,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bce849fa.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst CurrentLocation = () => {\r\n  const [coordinates, setcoordinates] = useState({\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const LocationData = async () => {\r\n      await navigator.geolocation.getCurrentPosition((position) => {\r\n        setcoordinates({\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        });\r\n      });\r\n    };\r\n    LocationData();\r\n  }, []);\r\n\r\n  //return coordinates\r\n  return coordinates;\r\n};\r\n\r\nexport default CurrentLocation;","import React, { useEffect, useState } from \"react\";\nimport CurrentLocation from \"./CurrentLocation\";\n\nfunction App() {\n  const { latitude, longitude } = CurrentLocation();\n\n  const [Data, setData] = useState();\n  const [location, setlocation] = useState({ lat: \"\", long: \"\" });\n  if (latitude !== location.lat || longitude !== location.long) {\n    setlocation({ lat: latitude, long: longitude });\n  }\n  console.log(location);\n  const endlat = 21.2440032;\n  const endlong = 72.8299872;\n\n  useEffect(() => {\n    const FetchData = async () => {\n      const url = `https://router.hereapi.com/v8/routes?transportMode=car&origin=${location.lat},${location.long}&destination=${endlat},${endlong}&return=polyline,turnbyturnactions&apikey=tLlWmBrfW04rbHVJZ6Aa7Y_QTMGLmA3csfW6P3PQzXs`;\n      const response = await fetch(url);\n      const resJSON = await response.json();\n      if (resJSON.routes !== undefined) {\n        const action = resJSON.routes[0].sections[0].turnByTurnActions;\n        setData(action);\n      }\n    };\n\n    FetchData();\n  }, [location]);\n\n  console.log(Data);\n  return (\n    <>\n      <div>\n        {location.lat},{location.long}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}